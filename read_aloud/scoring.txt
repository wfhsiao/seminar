processing CBF108035 周芊嘉... 
 3. Puts procedures were demonstrated in the video lecture. The video is about using the semi-linear work driver with high sound to automated test case for crease with check passes. The procedure described in the video includes the following steps. Go to the crease link where each question has check passes deep against the path possible answers. Repeat each combination of check passes or check passes or each pair of check passes or a single check pass until the answer is correct. Repeat the previous steps for each question. The video then goes to describe how to automatic test using semi-linear work driver with high sound in its increased details on how to find check passes and maintains check then and use a defined function to determine if the answer is correct. Go to the resigning behind automatic test case for crease with check passes using semi-linear work driver with high sound is to efficiently and accurately determine the correct answers to crease cross strings by trying different combinations of check passes. The video describes how to use semi-linear work driver with high sound to find check pass, animate, check length and use a user defined function to determine if the answer is correct. This automation allows for a more efficient and accurate way of finding accurate answers to crease questions. This path procedure were demonstrated in the video nature. The procedure demonstrated in the video are handling semi-linear high sound firms and semi-linear high sound earth handling. The video is turning how to switch to a frame and a find and animate using its and how to handle an errant message path that passes up on a web page using some medium web driver. It also provides a pie sound script example that shows how to find a switch to a frame. Find and click a button within the frame and handle the earth that appears after clicking the button. What procedure were demonstrated in the video nature? The video is tutoring and using semi-linear web driver with high sound to take screenshots. The procedure described in the video includes the following steps. Write a function to take screenshots automatically using the set screenshot, a message of web driver to use the pie sound image library PIL to modify a screenshot by residing it, rotating it or saving it in other format 3. Use PIL to take an image screenshot by clicking that screenshot. Call the screenshot function within the test script to take screenshots automatically. The video then goes on to provide an example script that demonstrates how to imprint this procedure using semi-linear web driver with pie sound and the PIL library. The procedure was demonstrated in the video nature. Installed open pyesale package using the VIP comment. The VIP install open pyesale 2. In the pie chart project, click file settings, project interpreter, then type open pyesale in available packages and click on the install package button. Create new pie sound file itself with dot py in pie chart ID. 4. Import open pyesale and the div node. The list is O5. Submit, specify the PIL file and the work shows within the PIL file. 6. Define variable for the workbook W in P in equal open pyesale. Load workbook name of the itself file along with the 4 file P. 7. Define variable for the workshifts W is equal workbook data 1. 8. Get the missing number of rows and the missing number of colors. 9. Start reading data from the second row. 10. Assess individual colors of the workshifts using dot call row number 10. Currents number B. 2. Create new pie sound file. 8. Create new pie sound file. 8. Start reading data from the first row. 10. Assess individual colors of the workshifts. 10. Assess individual colors of the workshifts. 10. Assess individual colors of the workshifts. 21. Page of module P-O-A define patch and the thicker are classals and labels.sighted. create separated files for the test node grid and for web page set by information such as local tools and operations to implement PON in new or setting Python projects by creating some favorite disk grid choice of folders for web page and test tests create a separate Python file for each web page and write code to define page services like information such as title, local tools and operations for write code in the test case Python file to contain only the test node grids means only test steps and the expected results validations the video then goes on to provide and the sample scripts that demonstrates how to implement this procedure using some medium web driver with Python and the PON design picture => 3. What procedures were demonstrated in the video lecture? The video is about using Selenium WebDriver with Python to automate a test case for a quiz with checkboxes. The procedure described in the video includes the following steps: Go to the quiz link where each question has checkboxes given against the possible answers. Click each combination of checkboxes, all checkboxes or each pair of checkboxes or a single checkbox until the answer is correct. Repeat the previous step for each question. The video then goes on to describe how to automate this test case using Selenium WebDriver with Python. It includes details on how to find checkbox elements, check them, and use a user-defined function to determine if the answer is correct. The reasoning behind automating the test case for a quiz with checkboxes using Selenium WebDriver with Python is to efficiently and accurately determine the correct answers to the quiz questions by trying different combinations of checkboxes. The video describes how to use Selenium WebDriver with Python to find checkbox elements, check them, and use a user-defined function to determine if the answer is correct. This automation allows for a more efficient and accurate way of finding the correct answers to the quiz questions. 6. What procedures were demonstrated in the video lecture? The procedures demonstrated in the video are handling Selenium Python frames and Selenium Python alert handling. The video explains how to switch to a frame and find an element within it, and how to handle an alert message box that pops up on the web page using Selenium web driver. It also provides a Python script example that shows how to find and switch to a frame, find and click a button within the frame, and handle the alert that appears after clicking the button. 10. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to take screenshots. The procedure described in the video includes the following steps: 1. Write a function to take screenshots automatically using the `save_screenshot` method of WebDriver. 2. Use the Python Imaging Library (PIL) to modify a screenshot by resizing it, rotating it, or saving it in another format. 3. Use PIL to take an element screenshot by cropping that screenshot. 4. Call the screenshot function within a test script to take screenshots automatically. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the PIL library. 12. What procedures were demonstrated in the video lecture? 1. Install OpenPy Excel package using the pip command: `PIP Install OpenPy Excel`. 2. In PyCharm project, click `File` > `Settings` > `project interpreter`, then type `OpenPy Excel` in available packages and click on the `install package` button. 3. Create a new Python file `Excel read.py` in PyCharm ID. 4. Import OpenPy Excel and give the alias as `O`. 5. Specify the Excel file and the worksheet within the Excel file. 6. Define a variable for the workbook: `WBE = OpenPy Excel.load_workbook(name of the Excel file along with the full file path)`. 7. Define a variable for the worksheet: `WS = workbook[Data1]`. 8. Get the maximum number of rows and maximum number of columns. 9. Start reading data from the second row. 10. Access individual cells of the worksheet using `.cell(row number, column number).value`. 13. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to implement the Page Object Model (POM) design pattern. The procedure described in the video includes the following steps: 1. Create separate files for the test logic and for the web page-specific information, such as locators and operations. 2. Implement POM in a new or existing Python project by creating separate directories or folders for web pages and test cases. 3. Create a separate Python file for each web page and write code to define page-specific information such as title, locators, and operations. 4. Write code in the test case Python file to contain only the test logic, meaning only test steps and expected results validations. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the POM design pattern. .... get score 73.61079350560256
總得分：74
--------- end of 0 --------------------
processing BBF111008 張國御... 
 3. One procedure will demonstrate in the video nature. The video is about using some NIM The video includes the following is that K to redial the calls and to destroy how to over-idage the test using the end which I will also use in the user's details and how to find the checkbox and check in and use the user to find the option to determine if the enter is correct or how to use the begin with the other in the item to find checkbox elements check in and use the user to find function to determine if the enter is correct which is operating on most of our own efficiency and current way for finding the correct answer to the three types of states like procedure or demonstrate in the video later the procedure they must fill in the video on entering the union types of friends and so on in the item alone handle it the video explains how it can help to switch to the friend and find an element in the end and how to handle a load message called the test calls out on the red page using the hand-grid driver also provides a present with each sample that shows how to find a screen to the friend find a screen of pattern within the print and handle the load that appears after cleaning the pattern what was to draw the demonstrate in the video later the video is a tutorial on using the name driver enter URL for the wave page to write code to find elements on the wave page using wave driver and this hand conditions 3, 3, 3, 8 and out of order as you choose test and use these matters to perform the information in search of the problem moving to end and creating and holding the message and being key and performing the place of answers for the right code to navigate to another URL and find elements on the new wave page but we are able to have to look for an entranceway test and use these measures to facilitate the source of a right page as you the video then calls into the right and the screen calls create that demo screen how to in timeline test because we draw using the hand-grid driver in the hand-grid driver and the hand-grid driver will take a while to see your demo screen in the video lecture the video is a tutorial on using the VM with driver in timeline test 3, 2, the video to find the video in full of following step 1 in a couple of 18, 1, 2, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3 4, 3, riichi as an structure for create global integrity for all relevant and elite 3 creators leads me This video then comes on to provide as we can hold free fil table safe prices landlord of a case for Nutrition using a free fiber observed in the actualghost cycle that you if put in thereligious video videoaguenam with a go this is very tough, it's way continues => 3. What procedures were demonstrated in the video lecture? The video is about using Selenium WebDriver with Python to automate a test case for a quiz with checkboxes. The procedure described in the video includes the following steps: Go to the quiz link where each question has checkboxes given against the possible answers. Click each combination of checkboxes, all checkboxes or each pair of checkboxes or a single checkbox until the answer is correct. Repeat the previous step for each question. The video then goes on to describe how to automate this test case using Selenium WebDriver with Python. It includes details on how to find checkbox elements, check them, and use a user-defined function to determine if the answer is correct. The reasoning behind automating the test case for a quiz with checkboxes using Selenium WebDriver with Python is to efficiently and accurately determine the correct answers to the quiz questions by trying different combinations of checkboxes. The video describes how to use Selenium WebDriver with Python to find checkbox elements, check them, and use a user-defined function to determine if the answer is correct. This automation allows for a more efficient and accurate way of finding the correct answers to the quiz questions. 6. What procedures were demonstrated in the video lecture? The procedures demonstrated in the video are handling Selenium Python frames and Selenium Python alert handling. The video explains how to switch to a frame and find an element within it, and how to handle an alert message box that pops up on the web page using Selenium web driver. It also provides a Python script example that shows how to find and switch to a frame, find and click a button within the frame, and handle the alert that appears after clicking the button. 10. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to take screenshots. The procedure described in the video includes the following steps: 1. Write a function to take screenshots automatically using the `save_screenshot` method of WebDriver. 2. Use the Python Imaging Library (PIL) to modify a screenshot by resizing it, rotating it, or saving it in another format. 3. Use PIL to take an element screenshot by cropping that screenshot. 4. Call the screenshot function within a test script to take screenshots automatically. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the PIL library. 12. What procedures were demonstrated in the video lecture? 1. Install OpenPy Excel package using the pip command: `PIP Install OpenPy Excel`. 2. In PyCharm project, click `File` > `Settings` > `project interpreter`, then type `OpenPy Excel` in available packages and click on the `install package` button. 3. Create a new Python file `Excel read.py` in PyCharm ID. 4. Import OpenPy Excel and give the alias as `O`. 5. Specify the Excel file and the worksheet within the Excel file. 6. Define a variable for the workbook: `WBE = OpenPy Excel.load_workbook(name of the Excel file along with the full file path)`. 7. Define a variable for the worksheet: `WS = workbook[Data1]`. 8. Get the maximum number of rows and maximum number of columns. 9. Start reading data from the second row. 10. Access individual cells of the worksheet using `.cell(row number, column number).value`. 13. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to implement the Page Object Model (POM) design pattern. The procedure described in the video includes the following steps: 1. Create separate files for the test logic and for the web page-specific information, such as locators and operations. 2. Implement POM in a new or existing Python project by creating separate directories or folders for web pages and test cases. 3. Create a separate Python file for each web page and write code to define page-specific information such as title, locators, and operations. 4. Write code in the test case Python file to contain only the test logic, meaning only test steps and expected results validations. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the POM design pattern. .... get score 35.17036359478619
總得分：35
--------- end of 1 --------------------
processing BBF111011 陳秀涵... 
 3. What's procedure when demonstrating the video the cursor. The video is about using Selenium Web Drive with Python to the addiment, a test case for Chris with checkbox. The procedure described in the video includes the following step. Go to the Chris link where each question has checkbox giving against the possible answer. Click each combination of checkbox or checkbox or each pair of checkbox or a single checkbox intel the answer is a correct code. Report the progress step for each question. The video then goes on to script how to addiment this test case using Selenium Web Drive with Python. It includes detail on how to find checkbox element check name and use a user different function to determine if the answer is a correct code. The reasoning behind addiment the test case for Chris with checkbox using Selenium Web Drive with Python is to professionally quickly determine the correct code answer to the Chris question by trying different combination of checkbox the video described how to use Selenium Web Drive with Python to find checkbox element check name and use a user different function to determine if the answer is a correct code. This add dimension add dimension allows for more finish and I read why of finding the correct code answer to the Chris question. Six parts procedure were demonstrate in the video the cache the procedure demonstrated in the video are handing Selenium Python friend and Selenium Python alert handing the video explain how to switch to a friend and find an element within its and how to handle and let me see three box let purpose up on the web page using Selenium Web Drive it's also reverse a Python script example let's show how to find and switch to a friend find and click a button within the friend and handle the loss let's plus after checkline the button 10 parts procedure were demonstrate in the video lecture the video is a tutorial I'm using Selenium Web Drive with Python to text screenshot the procedure demonstrate in the video in close the following step one write a function to text screenshot after automatically using the save screenshot method method of web drive to use the Python imagery library p i l o to modify a screenshot by resizing it's writing writing it's oral save it in other format three use p i l o to text and element screenshot by ream being let's screenshot for color screenshot function within a text a screen to text screenshots automatically the video then goes on to profile and example script let's demonstrate how to implement this post tree using Selenium Web Drive with Python and the b i l library 12 parts procedure was demonstrate in the video lecture one install open pack excel package using the pick command pick install open pack excel 2 in python project check file setting project install part then tap open pack excel in available packages and click unload install packy calls button 3 create a new python find excel read by import open pack excel and give the elix a zero 5 best file excel file and the workshop within the excel file six different a very variable for the workbook workbook wpe equal open pack excel load workbook workbook then of the excel file only with the few file path 7 different a variable for the workshop ws equal workbook workbook workbook data one add get the minimum number of rules and the maximum number of colors 10 or 9 start reading data for the second rule 10 access in you just cross of the workshop using call rule number 1 cut number 13 what procedure was demonstrate in the video lecture the video is a tutorial on using Selenium Web Drive with Python to implement the page of mode b o m design pattern the procedure describe it in the video includes the following step one we add separate files follow test logic and follow web page specifically information such as locate and ablation tool implement p o n in new or a custom person project by creating separate directory or folder for web page and test case 3 create a theory by python file for each web page and the what code to define page a specify information such as title locate and ablation for blood code in the test case file to contain only the test logic meaning only test step and the affect the rest very little action the video length goes on to provide and example square that determine street how to implement the procedure using selenium web driver with python and the p o m design pattern => 3. What procedures were demonstrated in the video lecture? The video is about using Selenium WebDriver with Python to automate a test case for a quiz with checkboxes. The procedure described in the video includes the following steps: Go to the quiz link where each question has checkboxes given against the possible answers. Click each combination of checkboxes, all checkboxes or each pair of checkboxes or a single checkbox until the answer is correct. Repeat the previous step for each question. The video then goes on to describe how to automate this test case using Selenium WebDriver with Python. It includes details on how to find checkbox elements, check them, and use a user-defined function to determine if the answer is correct. The reasoning behind automating the test case for a quiz with checkboxes using Selenium WebDriver with Python is to efficiently and accurately determine the correct answers to the quiz questions by trying different combinations of checkboxes. The video describes how to use Selenium WebDriver with Python to find checkbox elements, check them, and use a user-defined function to determine if the answer is correct. This automation allows for a more efficient and accurate way of finding the correct answers to the quiz questions. 6. What procedures were demonstrated in the video lecture? The procedures demonstrated in the video are handling Selenium Python frames and Selenium Python alert handling. The video explains how to switch to a frame and find an element within it, and how to handle an alert message box that pops up on the web page using Selenium web driver. It also provides a Python script example that shows how to find and switch to a frame, find and click a button within the frame, and handle the alert that appears after clicking the button. 10. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to take screenshots. The procedure described in the video includes the following steps: 1. Write a function to take screenshots automatically using the `save_screenshot` method of WebDriver. 2. Use the Python Imaging Library (PIL) to modify a screenshot by resizing it, rotating it, or saving it in another format. 3. Use PIL to take an element screenshot by cropping that screenshot. 4. Call the screenshot function within a test script to take screenshots automatically. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the PIL library. 12. What procedures were demonstrated in the video lecture? 1. Install OpenPy Excel package using the pip command: `PIP Install OpenPy Excel`. 2. In PyCharm project, click `File` > `Settings` > `project interpreter`, then type `OpenPy Excel` in available packages and click on the `install package` button. 3. Create a new Python file `Excel read.py` in PyCharm ID. 4. Import OpenPy Excel and give the alias as `O`. 5. Specify the Excel file and the worksheet within the Excel file. 6. Define a variable for the workbook: `WBE = OpenPy Excel.load_workbook(name of the Excel file along with the full file path)`. 7. Define a variable for the worksheet: `WS = workbook[Data1]`. 8. Get the maximum number of rows and maximum number of columns. 9. Start reading data from the second row. 10. Access individual cells of the worksheet using `.cell(row number, column number).value`. 13. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to implement the Page Object Model (POM) design pattern. The procedure described in the video includes the following steps: 1. Create separate files for the test logic and for the web page-specific information, such as locators and operations. 2. Implement POM in a new or existing Python project by creating separate directories or folders for web pages and test cases. 3. Create a separate Python file for each web page and write code to define page-specific information such as title, locators, and operations. 4. Write code in the test case Python file to contain only the test logic, meaning only test steps and expected results validations. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the POM design pattern. .... get score 76.5607134690144
總得分：77
--------- end of 2 --------------------
processing BBF111002 林涵慧... 
 Hot procedure war-demonstrates in video lecture The video is about using the linear with driver with python to automatic attester cache for a class with chuck-bases A procedure describes in video included the following steps Go to the class link where each question has chuck-bases given the answer the possible answer collect each combination of chuck-bases or chuck-bases or each pair of chuck-bases or a single chuck-bases In-tail, the answer is correct repeat the previous step for each question The video length goes on to describe how to automatically test test using the linear with driver with python It includes details on how to find the chuck-bases element chuck length and use the user user defines the function to determine if the answer is correct The listening behind automating the test cache for a class with chuck-bases using the linear with driver with python It is too efficiently and accurately determine the correct answer to the class's questions by trying different combinations of chuck-bases The video describes how to use the test to use the linear with driver with python to find the chuck-bases element chuck length and use the user defines the function to determine if the answer is correct This automation allows for a more efficient and accurate way of finding the correct answers to the class's questions 6. What procedure were demonstrated in video lecture The procedure who demonstrated in the video are handling the linear python's length and the linear python a lot handling The video explains how to switch to a length and find an element within it and how to handle and alert messages Let's tap up on the web page using the linear with driver It also provides a python's grip to sample Let how to find and switch to a length Find and collect a button within the length and handle the alert length Appear after cracking the button 10. What procedure were demonstrated in the video lecture The video is a tutorial using the linear with driver with python to tackle screen shots The procedure described in the video includes the following steps 1. Write a function to tackle screen shots automatically using the level screen shot 2. Use the python's image 2. Modify a screen shot by resizing it Notating it or saving it in another format 3. Use PILO to test an element screen shot by 3. Clapping the screen shot 4. Color screen shot function within a tackle screen 4. Color screen shot function within a tackle equipped to tackle screen shot automatically The video then goes on to provide an example to collect Let's demonstrate how to implement this Pro's feature 3. Use the linear with driver with python and the PILO library 12. What procedures were demonstrated in the video lecture 1. Use the open pie itself package using the people command 4. Use the open pie itself 2. Impait try project 6. Collect file settings project interpret Then type open pie itself in variable package and collect on install package button 3. Create new python file itself reader.py 4. Import open pie itself under giver layer alias of all files The best file is itself file under worker shoot within itself file 6. Define a variable for worker book WBE equal open pie itself that load worker book 9. Install file 7. Define a variable for worker shoot WBE equal worker book data 1 8. Get a load of maximum number of loads and maximum number of colors 9. Start reading start 9. Start reading data from second row 10. S in 10. S in individual cells of worker shoot Using cell row number color number dot value 13. What procedures were demonstrated in the video lecture The video is a tutorial on using the linear with driver with python 2. Impait the pegs 6. App project model design 6. Python pattern The procedure described in the video includes the following steps 1. Create separate files for test logic and follow web page 6. Specific information 6. Such as locators and operations 6. Impaitment PON in a new or existing python project 6. Apply 6. Apply 6. Apply 6. Apply 6. Apply the vector directory 6. Test test test 6. Create a separate python file for each web page and write code to define page separate, specific information such as title, locators, and operations 4. Write code in the test test Python file to contain only the test logic Main only test test step and its band 6. Resolve by the data The video then goes to provide and is simple equipped Let's demonstrate how to implement this procedure Using Selenium WebDriver with python and the PON design Python => 3. What procedures were demonstrated in the video lecture? The video is about using Selenium WebDriver with Python to automate a test case for a quiz with checkboxes. The procedure described in the video includes the following steps: Go to the quiz link where each question has checkboxes given against the possible answers. Click each combination of checkboxes, all checkboxes or each pair of checkboxes or a single checkbox until the answer is correct. Repeat the previous step for each question. The video then goes on to describe how to automate this test case using Selenium WebDriver with Python. It includes details on how to find checkbox elements, check them, and use a user-defined function to determine if the answer is correct. The reasoning behind automating the test case for a quiz with checkboxes using Selenium WebDriver with Python is to efficiently and accurately determine the correct answers to the quiz questions by trying different combinations of checkboxes. The video describes how to use Selenium WebDriver with Python to find checkbox elements, check them, and use a user-defined function to determine if the answer is correct. This automation allows for a more efficient and accurate way of finding the correct answers to the quiz questions. 6. What procedures were demonstrated in the video lecture? The procedures demonstrated in the video are handling Selenium Python frames and Selenium Python alert handling. The video explains how to switch to a frame and find an element within it, and how to handle an alert message box that pops up on the web page using Selenium web driver. It also provides a Python script example that shows how to find and switch to a frame, find and click a button within the frame, and handle the alert that appears after clicking the button. 10. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to take screenshots. The procedure described in the video includes the following steps: 1. Write a function to take screenshots automatically using the `save_screenshot` method of WebDriver. 2. Use the Python Imaging Library (PIL) to modify a screenshot by resizing it, rotating it, or saving it in another format. 3. Use PIL to take an element screenshot by cropping that screenshot. 4. Call the screenshot function within a test script to take screenshots automatically. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the PIL library. 12. What procedures were demonstrated in the video lecture? 1. Install OpenPy Excel package using the pip command: `PIP Install OpenPy Excel`. 2. In PyCharm project, click `File` > `Settings` > `project interpreter`, then type `OpenPy Excel` in available packages and click on the `install package` button. 3. Create a new Python file `Excel read.py` in PyCharm ID. 4. Import OpenPy Excel and give the alias as `O`. 5. Specify the Excel file and the worksheet within the Excel file. 6. Define a variable for the workbook: `WBE = OpenPy Excel.load_workbook(name of the Excel file along with the full file path)`. 7. Define a variable for the worksheet: `WS = workbook[Data1]`. 8. Get the maximum number of rows and maximum number of columns. 9. Start reading data from the second row. 10. Access individual cells of the worksheet using `.cell(row number, column number).value`. 13. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to implement the Page Object Model (POM) design pattern. The procedure described in the video includes the following steps: 1. Create separate files for the test logic and for the web page-specific information, such as locators and operations. 2. Implement POM in a new or existing Python project by creating separate directories or folders for web pages and test cases. 3. Create a separate Python file for each web page and write code to define page-specific information such as title, locators, and operations. 4. Write code in the test case Python file to contain only the test logic, meaning only test steps and expected results validations. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the POM design pattern. .... get score 72.53601646466956
總得分：73
--------- end of 3 --------------------
processing CBF108059 吳雅儀... 
 What procedures were demonstrated in the video lecture? The video is about using Selenium WebDriver with Python to automate a test case for a quiz with checkboxes. The procedure described in the video includes the following steps. Go to the quiz link. Where each question has checkboxes given against the possible answers. Click each combination of checkboxes, or checkboxes, or each pair of checkboxes, or a single checkbox until the answer is correct. Repeat the previous step for each question. The video then goes onto the describe how to automata this test case using Selenium WebDriver with Python. It includes details on how to find a checkbox element. Check then, and use a user-defined function to determine if the answer is correct. The reasoning behind automating the test case for a quiz with checkboxes using Selenium WebDriver with Python is to efficiently and accurately determine the correct answers to the quiz questions by trying different combinations of checkboxes. The video describes how to use Selenium WebDriver with Python to find checkbox element. Check then, and use a user-defined function to determine if the answer is correct. This automation allows for a more efficient and accurate way of finding the correct answers to the quiz questions. What procedures were demonstrated in the video lecture? The procedures demonstrated in the video are handling Selenium Python friends, and Selenium Python alert handling. The video explains how to switch to a friend, and find an element within it, and how to handle an alert message box. Let pops up on the web page using Selenium WebDriver. It also provides a Python script example that shows how to find and switch to a friend. Find and click a button within the friend, and handle the alert that appears after clicking the button. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to take screenshots. The procedure described in the video includes the following steps. Write a function to take screenshots automatically using the safe screenshots method of WebDriver. Use the Python imaging library to modify a screenshot by resizing it, rotating it, or saving it in another format. Use PIL to take an element screenshot by cropping that screenshot. Call a screenshot function within a tester script to take screenshots automatically. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the PIL library. What procedures were demonstrated in the video lecture? Install OpenPYExcel package using the PIP command, PIP install OpenPYExcel. In PYTraum project, click file, settings, project interpreter, then type OpenPYExcel in available packages, and click on the install packages button. Create a new Python file, Excel, read PY in PYTraum ID. Import OpenPYExcel and give the alias as all, specifically Excel file, and the worksheet within the Excel file. Define a variable for the workbook, WBE equals OpenPY, Excel Load Workbook, named of the Excel file, along with the full file path. Define a variable for the worksheet, WS equals workbook data1. Get the maximum number of rows and the maximum number of columns. Start reading data from the second row. Access individual cells of the worksheet using cell row number, column number, value. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to implement the page object model. Design pattern. The procedure described in the video includes the following steps. Create separated files for the test logic and for the WebPYExcel specific information, such as locators and operations. Importment POM in a new or existing Python project by creating separated directories, or folders for WebPages and the tester cases. Create a separated Python file for each WebPYExcel and write code to define pages specific information, such as title, locators and operations. Write code in the tester case, Python file to contain only the tester logic, meaning only tester steps and the expected results validations. The video then goes on to provide an example script. Let's demonstrate how to implement this procedure using Selenium WebDriver with Python and the POM design pattern. Thank you. => 3. What procedures were demonstrated in the video lecture? The video is about using Selenium WebDriver with Python to automate a test case for a quiz with checkboxes. The procedure described in the video includes the following steps: Go to the quiz link where each question has checkboxes given against the possible answers. Click each combination of checkboxes, all checkboxes or each pair of checkboxes or a single checkbox until the answer is correct. Repeat the previous step for each question. The video then goes on to describe how to automate this test case using Selenium WebDriver with Python. It includes details on how to find checkbox elements, check them, and use a user-defined function to determine if the answer is correct. The reasoning behind automating the test case for a quiz with checkboxes using Selenium WebDriver with Python is to efficiently and accurately determine the correct answers to the quiz questions by trying different combinations of checkboxes. The video describes how to use Selenium WebDriver with Python to find checkbox elements, check them, and use a user-defined function to determine if the answer is correct. This automation allows for a more efficient and accurate way of finding the correct answers to the quiz questions. 6. What procedures were demonstrated in the video lecture? The procedures demonstrated in the video are handling Selenium Python frames and Selenium Python alert handling. The video explains how to switch to a frame and find an element within it, and how to handle an alert message box that pops up on the web page using Selenium web driver. It also provides a Python script example that shows how to find and switch to a frame, find and click a button within the frame, and handle the alert that appears after clicking the button. 10. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to take screenshots. The procedure described in the video includes the following steps: 1. Write a function to take screenshots automatically using the `save_screenshot` method of WebDriver. 2. Use the Python Imaging Library (PIL) to modify a screenshot by resizing it, rotating it, or saving it in another format. 3. Use PIL to take an element screenshot by cropping that screenshot. 4. Call the screenshot function within a test script to take screenshots automatically. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the PIL library. 12. What procedures were demonstrated in the video lecture? 1. Install OpenPy Excel package using the pip command: `PIP Install OpenPy Excel`. 2. In PyCharm project, click `File` > `Settings` > `project interpreter`, then type `OpenPy Excel` in available packages and click on the `install package` button. 3. Create a new Python file `Excel read.py` in PyCharm ID. 4. Import OpenPy Excel and give the alias as `O`. 5. Specify the Excel file and the worksheet within the Excel file. 6. Define a variable for the workbook: `WBE = OpenPy Excel.load_workbook(name of the Excel file along with the full file path)`. 7. Define a variable for the worksheet: `WS = workbook[Data1]`. 8. Get the maximum number of rows and maximum number of columns. 9. Start reading data from the second row. 10. Access individual cells of the worksheet using `.cell(row number, column number).value`. 13. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to implement the Page Object Model (POM) design pattern. The procedure described in the video includes the following steps: 1. Create separate files for the test logic and for the web page-specific information, such as locators and operations. 2. Implement POM in a new or existing Python project by creating separate directories or folders for web pages and test cases. 3. Create a separate Python file for each web page and write code to define page-specific information such as title, locators, and operations. 4. Write code in the test case Python file to contain only the test logic, meaning only test steps and expected results validations. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the POM design pattern. .... get score 92.81957466270295
總得分：93
--------- end of 4 --------------------
processing CBF108021 吳昀珈... 
 3. 4 procedure will demonstrate it in the video lecture The video is about losing the linear spread driver with Python to automate a test test for a quiz with checkbox The procedure, this part in the video includes the following steps Go to the quiz link where each question has checkbox, giving against the possible answers Click each combination of checkboxes, or checkboxes, or each pair of checkboxes, or a single checkbox Unities the answer is correct Repeat the previous step of the each question The video link goes on to describe how to automate this test test using the linear spread driver with Python It includes details on how to find checkbox elements, check length, and use a user-defined function to determine if the answer is correct The reasoning behind automatings is the test test test for a quiz with checkbox using the linear spread driver with Python It's too efficiently and accurately determines the correct answers to the quiz questions by trying different combinations of checkbox The video describes how to use the linear spread driver with Python to find checkbox elements Check length and use a user-defined function to determine if the answer is correct This automation allows for a more efficient and accurate way of finding the correct answers to the quiz questions 6. While the procedure will demonstrate it in the video lecture The procedure demonstrated in the video are handling 13 years high sound friends and the linear high sound alert handling The video explains how to switch to the firms and find elements within it And how to handle an alert message box lens up on the web page using the linear web driver It also provides a Python script example Let's show how to find and switch to a firm's Find and click a button within the firm's and handle the alert's lens appears after clicking the button 10. What procedure will demonstrate it in the video lecture The video is a tutorial on using the linear web drivers with Python to text screenshots The procedure described in the video includes the following steps 1. Write a function to text screenshots automatically using the self-stream shot 2. Use the Python imaging library peel to modify a screenshot by recessing it, Growning it, or 7. It in another format 3. Use peel to text an element screenshot by copying the screenshot 4. Call the screenshot functions within a test script to tell screenshots automatically The video lens goes on to the provide and the same post script Let's demonstrate how to implement these procedures using the linear web driver with Python and the PILO library 12. What procedure will demonstrate in the video lecture 1. Install OpenPike Excel package using the PIP command PIP install OpenPike Excel 2. Impeitron projects click file, settings Projects, Interpreter, lens, tap OpenPike cell in Avoid package Click on the install package button 3. Create new Python files, excelread.py in PIP shown ID 4. Improve OpenPike Excel and give the alias as O 5. Set the file and the work should within the Excel file 6. Define the variable for the workbook WBE equal OpenPike Excel Load workbook name of the Excel file along with the full file path 7. Define the variable for the work should WSE call workbook data 1 8. Get the measurements number of rows 9. Start reading data from the second row 10. Assess individual cells for the work should Using cells growth number column numbers does value 13 Her procedure was demonstrating in the video lecture The video is the tutorial on using Selenius WebDriver with Python 2. Impeilments the page, updress, model, clones, design, pattern The procedure is described in the video in Duluth the following steps 1. Create separate files of the test logic and follow the web page 7. Sufficient information such as lock characters and operations 2. Implement them in a new or accessible Python 3. Create separate, devectally, or folders for web page 3. Create separate Python file for each web 3. Pidge and write code to define Pidge diversific 4. Write code in test tests Python file to contain only the test logic 4. Meanings only test depth and expect result 4. The video length goes on to per world and is sample script Let's demonstrate how to implement this procedure using Selenius WebDriver with Python and the Palms. Decide, pay tune => 3. What procedures were demonstrated in the video lecture? The video is about using Selenium WebDriver with Python to automate a test case for a quiz with checkboxes. The procedure described in the video includes the following steps: Go to the quiz link where each question has checkboxes given against the possible answers. Click each combination of checkboxes, all checkboxes or each pair of checkboxes or a single checkbox until the answer is correct. Repeat the previous step for each question. The video then goes on to describe how to automate this test case using Selenium WebDriver with Python. It includes details on how to find checkbox elements, check them, and use a user-defined function to determine if the answer is correct. The reasoning behind automating the test case for a quiz with checkboxes using Selenium WebDriver with Python is to efficiently and accurately determine the correct answers to the quiz questions by trying different combinations of checkboxes. The video describes how to use Selenium WebDriver with Python to find checkbox elements, check them, and use a user-defined function to determine if the answer is correct. This automation allows for a more efficient and accurate way of finding the correct answers to the quiz questions. 6. What procedures were demonstrated in the video lecture? The procedures demonstrated in the video are handling Selenium Python frames and Selenium Python alert handling. The video explains how to switch to a frame and find an element within it, and how to handle an alert message box that pops up on the web page using Selenium web driver. It also provides a Python script example that shows how to find and switch to a frame, find and click a button within the frame, and handle the alert that appears after clicking the button. 10. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to take screenshots. The procedure described in the video includes the following steps: 1. Write a function to take screenshots automatically using the `save_screenshot` method of WebDriver. 2. Use the Python Imaging Library (PIL) to modify a screenshot by resizing it, rotating it, or saving it in another format. 3. Use PIL to take an element screenshot by cropping that screenshot. 4. Call the screenshot function within a test script to take screenshots automatically. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the PIL library. 12. What procedures were demonstrated in the video lecture? 1. Install OpenPy Excel package using the pip command: `PIP Install OpenPy Excel`. 2. In PyCharm project, click `File` > `Settings` > `project interpreter`, then type `OpenPy Excel` in available packages and click on the `install package` button. 3. Create a new Python file `Excel read.py` in PyCharm ID. 4. Import OpenPy Excel and give the alias as `O`. 5. Specify the Excel file and the worksheet within the Excel file. 6. Define a variable for the workbook: `WBE = OpenPy Excel.load_workbook(name of the Excel file along with the full file path)`. 7. Define a variable for the worksheet: `WS = workbook[Data1]`. 8. Get the maximum number of rows and maximum number of columns. 9. Start reading data from the second row. 10. Access individual cells of the worksheet using `.cell(row number, column number).value`. 13. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to implement the Page Object Model (POM) design pattern. The procedure described in the video includes the following steps: 1. Create separate files for the test logic and for the web page-specific information, such as locators and operations. 2. Implement POM in a new or existing Python project by creating separate directories or folders for web pages and test cases. 3. Create a separate Python file for each web page and write code to define page-specific information such as title, locators, and operations. 4. Write code in the test case Python file to contain only the test logic, meaning only test steps and expected results validations. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the POM design pattern. .... get score 79.96798536473817
總得分：80
--------- end of 5 --------------------
processing BBF111001 蘇柏燊... 
 What procedure will demonstrate in the video nature? The video is about using Selenium WebDriver with Python to automate a test case for a quiz with check passes. The procedure describes in the video includes the following steps. Go to the quiz link where each question has checked passes given against the pass-pouncer. Check each combination of check passes or check passes or each pair of check passes or a single check pass until the answer is correct. Repeat the previous step for each question. The video then goes on to describe how to automate this test case using Selenium WebDriver with Python. It includes details on how to find check pass elements. Check them and use a user-defined function to determine if the answer is correct. The re-sign behind automating the test case for a quiz with check passes using Selenium WebDriver with Python is too efficiently and actually determine the correct answer to the quiz questions by trying different combinations of check passes. The video describes how to use Selenium WebDriver with Python to find check pass elements. Check them and use a user-defined function to determine if the answer is correct. This also mentioned a lot for a more efficient and accurate way of finding the correct answer to the quiz questions. Let's see what procedure will demonstrate in the video lecture. The procedure demonstrate in the video are handling Selenium Python frames and Selenium Python a lot. A lot handling the video explains how to switch to a frame and find an element within it and how to handle a alert master pass that pops up on the web page using Selenium WebDriver it also provides a Python script example that shows how to find and switch to a frame, find and click a button within the frame and handle the alert that appears after clicking the button. What procedures will demonstrate in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to automate master action using the action-chance library. The procedure decribles in the video includes the following steps. One import the necessary models from Selenium and define the escute tool pass for the WebDriver and the URL for the web page. Webcode and two write code and file element on the web page using WebDriver with and expected conditions. Pre-create an object for the action-chance class and use it must method to perform mouse mouse, machine search a double clicking, moving to an element, clicking and holding the key using, setting keys and performing a sequence of actions for write code and never get to another URL and find element on the new web page. Create a new object for the action-chance class and use it method to perform drag and drag and drag and write code-action. The video then goes on to provide an example creep that demonstrates how to import this procedure using Selenium WebDriver with Python. One procedure will demonstrate in the video lecture. The video is a tutorial on using Selenium WebDriver with Python to take screenshots. The procedure decribles in the video includes the following steps. One, write a function to take screenshot automatically using the self-screen-shot method of WebDriver to use the Python image library to modify a screenshot by releasing it, rooting it or saving it in another form. So use PI The video then goes on to provide an example creep that demonstrates how to implement this procedure using Selenium WebDriver with Python and the VIA library. What procedure will demonstrate in the video lecture? Instead, open PI-E-Sail package using the PIP commit, PIP install open PI-E-Sail to in Python project, project, click file and set in project interpreter. Then type open PI-E-Sail in available page and click on the install page button. Create a new Python file in cell read PI in PyCharm ID for import open PI-E-Sail and give the list as O. Specify the cell file and the Worship within the cell file. Select the file variable for the workbook WBE equal open PI-E-Sail load, workbook, then of the cell file along with the full file path. Select the file variable for the Worship WSE core workbook data one. Select get the measurement numbers of rows and the measurement number of columns. Nice. Start reading data from the second row. Then assess the video, cell of the Worship using cell. A cell row number, column number value. What procedure will demonstrate in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to implement the page object model. Decide pattern. The procedure decibels in the video include the following steps. 1. Create separate files for the test logic and for the web page. 2. Specific specific information such as locator and operation. 2. Implement POM in a new or existing Python project by creating separate. The rationalize of folders for web pages and test tests. 3. Create a separate Python file for each web page and write code to define page specific information such as title. 4. Locator and operations for write code in the test case Python file to contain only the test logic. 4. Mean only test steps and the expected result. 3. Really dashing. The video then calls on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python ended. 4. POM Decide pattern. 4. What procedure will demonstrate in the video nature? The video is a tutorial on using XPath and CSS Lactors to find an element on a web page. The procedure described in the video includes the following steps. 1. Understand the syntax of XPath and CSS Lactors in XPath's syntax to forward slashes. 1. Select this then. This then. And the symbol means a tree rebuild in CSS. The has symbol means ID and a single does means class name. 3. Use the browser developer to or search a select tab to find the XPath or CSS Lactors for an element on a web page. 3. Copy the XPath or sub or CSS selector from the developer tools or selector hub and use it in a test automation script. The video then goes on to provide an example of how to use the developer tools and the selector hub to find the XPath or CSS Lactors for an element on a web page. => 3. What procedures were demonstrated in the video lecture? The video is about using Selenium WebDriver with Python to automate a test case for a quiz with checkboxes. The procedure described in the video includes the following steps: Go to the quiz link where each question has checkboxes given against the possible answers. Click each combination of checkboxes, all checkboxes or each pair of checkboxes or a single checkbox until the answer is correct. Repeat the previous step for each question. The video then goes on to describe how to automate this test case using Selenium WebDriver with Python. It includes details on how to find checkbox elements, check them, and use a user-defined function to determine if the answer is correct. The reasoning behind automating the test case for a quiz with checkboxes using Selenium WebDriver with Python is to efficiently and accurately determine the correct answers to the quiz questions by trying different combinations of checkboxes. The video describes how to use Selenium WebDriver with Python to find checkbox elements, check them, and use a user-defined function to determine if the answer is correct. This automation allows for a more efficient and accurate way of finding the correct answers to the quiz questions. 6. What procedures were demonstrated in the video lecture? The procedures demonstrated in the video are handling Selenium Python frames and Selenium Python alert handling. The video explains how to switch to a frame and find an element within it, and how to handle an alert message box that pops up on the web page using Selenium web driver. It also provides a Python script example that shows how to find and switch to a frame, find and click a button within the frame, and handle the alert that appears after clicking the button. 10. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to take screenshots. The procedure described in the video includes the following steps: 1. Write a function to take screenshots automatically using the `save_screenshot` method of WebDriver. 2. Use the Python Imaging Library (PIL) to modify a screenshot by resizing it, rotating it, or saving it in another format. 3. Use PIL to take an element screenshot by cropping that screenshot. 4. Call the screenshot function within a test script to take screenshots automatically. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the PIL library. 12. What procedures were demonstrated in the video lecture? 1. Install OpenPy Excel package using the pip command: `PIP Install OpenPy Excel`. 2. In PyCharm project, click `File` > `Settings` > `project interpreter`, then type `OpenPy Excel` in available packages and click on the `install package` button. 3. Create a new Python file `Excel read.py` in PyCharm ID. 4. Import OpenPy Excel and give the alias as `O`. 5. Specify the Excel file and the worksheet within the Excel file. 6. Define a variable for the workbook: `WBE = OpenPy Excel.load_workbook(name of the Excel file along with the full file path)`. 7. Define a variable for the worksheet: `WS = workbook[Data1]`. 8. Get the maximum number of rows and maximum number of columns. 9. Start reading data from the second row. 10. Access individual cells of the worksheet using `.cell(row number, column number).value`. 13. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to implement the Page Object Model (POM) design pattern. The procedure described in the video includes the following steps: 1. Create separate files for the test logic and for the web page-specific information, such as locators and operations. 2. Implement POM in a new or existing Python project by creating separate directories or folders for web pages and test cases. 3. Create a separate Python file for each web page and write code to define page-specific information such as title, locators, and operations. 4. Write code in the test case Python file to contain only the test logic, meaning only test steps and expected results validations. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the POM design pattern. .... get score 44.82048936656757
總得分：45
--------- end of 6 --------------------
processing CBF108060 許琇雅... 
 3. Our procedures were demonstrated in the video lecture. The video is about using Selenium with driver with Python to automate a test case for a quiz with checkbases. The procedure described in the video includes the following steps. 3. Go to the quiz link where each question has checkbases given against all possible answers. 3. Take each combination of checkbases. How checkbases or each pair of checkbases or a single checkbases until an answer is correct. 3. Repeat the previous step for each question. The video link goes on to describe how to automate this test case using Selenium with driver with Python. It includes details on how to find checkbases elements. 3. Check the end and use a user-defined function to determine if the answer is correct. 3. The reasoning behind automating the test case for a quiz with checkbases using Selenium with driver with Python is true efficiently and accurately. Determine the correct answers to the quiz questions by trying different combinations of checkbases. The video describes how to use Selenium with driver with Python to find checkbases elements. Check the end and use a user-defined function to determine if the answer is correct. This automation allows for a non-efficient and accurate way of finding the correct answers to the quiz questions. 6. What procedures were demonstrated in the video lecture? The procedures demonstrated in the video are hindrains linear Python, friends and linear Python load hindrains. The video explains how to switch to a friend and find an element within it and how to handle a load-max tree bus that pops up on a webpage using Selenium with driver. It also provides a Python script simple last shoes how to find and switch to a friend. Find and click a button within a friend and handle the load-max appears after clicking a button. 10. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium with driver with Python to check screenshots. The procedure described in the video includes the following steps. 1. Light a function to check screenshots automatically using the safe screenshot method of web driver. 2. Use the Python imagery library PIL to modify a screenshot by resizing it, rotating it or saving it in another format. 3. Use PIL to take an element screenshot by cropping line screenshot. 4. Color screenshot function within a test script to take screenshots automatically. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium with driver with Python and PIL library. 5. What procedures were demonstrated in the video lecture? 1. Install OpenPigSail package using the PIP Connect PIP Install OpenPigSail. 2. In PyTor project, click file, settings, project interpreter, then type OpenPigSail in available packages and click on the InstallPigSail button. 3. Create a new Python file is SelRedW1 in PyTor ID. 4. Import OpenPigSail and give alias as all. 5. Specify the itself file and load shoot within the itself file. 6. Define a variable for a workbook WBE OpenPigSail load workbook then offer the itself file along with the full file path. 6. Define a variable for a work shoot W.S. workbook data 1. Head, get the maximum number of rows and max number of columns. 6. Start reading data from the second row. 10. Assist individual cells of a work shoot using. 7. Row number, column number, value. 13. All procedures were demonstrated in the video lecture. The video is a tutorial on using Selenium with driver with Python to implement the page up-draw model POA. 9. Design pattern. The procedure described in the video includes the following steps. 1. Create separate files for the test logic and for the web pages specific information such as locators and operations. 2. Improvement POA in a new or existing Python project by creating separate directories or folders for web pages and test cases. 3. Create a separate Python file for each web page and write code to define pages specific information such as title, locators and operations. 4. Write code in the test case. Python failed to contain only the test logic meaning only test steps and expected resource validations. The video then goes on to provide an example script. That means trying how to implement this procedure using Selenium with driver with Python and POA design pattern. => 3. What procedures were demonstrated in the video lecture? The video is about using Selenium WebDriver with Python to automate a test case for a quiz with checkboxes. The procedure described in the video includes the following steps: Go to the quiz link where each question has checkboxes given against the possible answers. Click each combination of checkboxes, all checkboxes or each pair of checkboxes or a single checkbox until the answer is correct. Repeat the previous step for each question. The video then goes on to describe how to automate this test case using Selenium WebDriver with Python. It includes details on how to find checkbox elements, check them, and use a user-defined function to determine if the answer is correct. The reasoning behind automating the test case for a quiz with checkboxes using Selenium WebDriver with Python is to efficiently and accurately determine the correct answers to the quiz questions by trying different combinations of checkboxes. The video describes how to use Selenium WebDriver with Python to find checkbox elements, check them, and use a user-defined function to determine if the answer is correct. This automation allows for a more efficient and accurate way of finding the correct answers to the quiz questions. 6. What procedures were demonstrated in the video lecture? The procedures demonstrated in the video are handling Selenium Python frames and Selenium Python alert handling. The video explains how to switch to a frame and find an element within it, and how to handle an alert message box that pops up on the web page using Selenium web driver. It also provides a Python script example that shows how to find and switch to a frame, find and click a button within the frame, and handle the alert that appears after clicking the button. 10. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to take screenshots. The procedure described in the video includes the following steps: 1. Write a function to take screenshots automatically using the `save_screenshot` method of WebDriver. 2. Use the Python Imaging Library (PIL) to modify a screenshot by resizing it, rotating it, or saving it in another format. 3. Use PIL to take an element screenshot by cropping that screenshot. 4. Call the screenshot function within a test script to take screenshots automatically. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the PIL library. 12. What procedures were demonstrated in the video lecture? 1. Install OpenPy Excel package using the pip command: `PIP Install OpenPy Excel`. 2. In PyCharm project, click `File` > `Settings` > `project interpreter`, then type `OpenPy Excel` in available packages and click on the `install package` button. 3. Create a new Python file `Excel read.py` in PyCharm ID. 4. Import OpenPy Excel and give the alias as `O`. 5. Specify the Excel file and the worksheet within the Excel file. 6. Define a variable for the workbook: `WBE = OpenPy Excel.load_workbook(name of the Excel file along with the full file path)`. 7. Define a variable for the worksheet: `WS = workbook[Data1]`. 8. Get the maximum number of rows and maximum number of columns. 9. Start reading data from the second row. 10. Access individual cells of the worksheet using `.cell(row number, column number).value`. 13. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to implement the Page Object Model (POM) design pattern. The procedure described in the video includes the following steps: 1. Create separate files for the test logic and for the web page-specific information, such as locators and operations. 2. Implement POM in a new or existing Python project by creating separate directories or folders for web pages and test cases. 3. Create a separate Python file for each web page and write code to define page-specific information such as title, locators, and operations. 4. Write code in the test case Python file to contain only the test logic, meaning only test steps and expected results validations. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the POM design pattern. .... get score 88.47473130573977
總得分：88
--------- end of 7 --------------------
processing BBF110008 廖明學... 
 3. what the residual demonstrate in the video lecture. the video is about using serenia with driver with python to element a test test for quick with checkbox the procedure is required in the video include the following step go to the query link where each question is the checkbox given against the possible answer. break each combination of the checkbox for the checkbox wall each pair of the checkbox for a single checkbox until the answer is correct repeat the previous step for each question the video then go on to describe how to element this test test using serenia with driver with python include detail on how to find checkbox element check them and use user define the function to determine if the answers is correct the reasoning by hiring a mentor the tester test for query checkbox using serenia with driver with python is too away from me and actually determine the correct answer to the question by trying different combination or checkbox the video require how to use serenia with driver with python to find checkbox element check them and use user define the function to determine if the answer is correct this are the mentors route for more the function and accurate way order and in the correct answer to the query she what procedure the dimensions three in the video lecture the procedure the mens three in the video are handling serenia passion frame and serenia passion other handling the video express how to switch to frame and the one in element within and how to handle and the other message back soon not a purpose up and the web drop page using serenia with driver it also provide a passion to query example not sure how to find and the switchy to a friend one and click a button within the friend and handle the other not appear after clicking the pattern at quarter procedure team industry in the video lecture the video is tutorial on using serenia web driver with python to a mental mouse action using the action chain library the procedure is quiet in the video include the following step one important the necessary module from serenia and define the executable pet for the web driver and the you are in a four-way page to write call to find element and web patch using web driver with and the exact condition three create an object for action chain class and use it is method to the four-mouth action such a double clicking moving to an element clicking and the 14 little this chain sending P and performing clear order action for right call a number get to another you are at all and the one element on the new web patch quite correct at new object for action chain class and use it is method to for try and drop and write a click action the video then go on to provider and example to quab not the mainstream how to in permission with procedure using serenia web driver with a python what procedure in the mainstream in the video the video is tutorial and using serenia web driver with python to take sequential the procedure describe in the video include the following step one right a function to take sequential and a man cutting using the shape sequential method or the web driver to use the Python imagine library p i you know to match that's why the screen shot by the site in reciting it rotation it was serving it in another cometer three use p i to take an element screenshot by clapping not screenshot for called screenshot function we then test the script to take screenshot element create the video then go on to provider and if simple script not the mainstream how to implement this position using serenia web driver with python enter the p i a library to help what procedure demonstrate in the video lecture one install open pi is shell actually using the path command then install open pi is shell to in pie shell project click while shetrin projector enter better name type open pi is shell in wearable peck j and click and install peck j button three correct new python flyer is shell ready type in pie shell i t4 important open pie is shell and given the error rates as all five space survive the shell file and the work shape we present the shell file set different variable for work put wbe open pie is shell not work work name of the is shell file around with a raw file pet seven t1 variable for work shape ws work book data one at get the maximum number of raw and the x-seren number of color at star rating data from the second row 10 x-set in the regular shell of the fourth shape using shell raw number color number love you set in what a teacher a demon stray in the video lecture the video is tutorial on fusion serenia wibershire with python to implement the pet ch object model p o and design pattern the procedure this quiet in the video include the quarian step one create separator file for the tester nudge and for wibers pet ch serenia in omecing such a locator and the operation to implement p o m in the new wall existing passion project by creating separator 39 inequalities take two threads maple paste, and writer equal to different validation specific information, such titles look heremit, and operations call in the test test Python file to contain only the test logic meaning only test step and exactly below the data the width of the m, call and tool provider and example script not demonstrate how to implement this procedure using Selenium WebDriver with the Python Python and the POM design package 15 procedure stream in the video lecture the video is tutorial on using a part and CSS to find element on the web patch the procedure required in the video in the crew following step 1 understand the syntax of x part and CSS select in x part syntax to 4 search mean select the change and the simple mean 3-bit in CSS the h simple mean id and a chinkra that mean correct name to use the browser the router tool select a half to find x part for CSS select 4-in element on the web patch 3-copy the x part for CSS select from the router path to a will select half and use it in the tester R-mange to create the video then go on for write and the extension of how to use the router tool and select half to find x part will CSS select 4-in => 3. What procedures were demonstrated in the video lecture? The video is about using Selenium WebDriver with Python to automate a test case for a quiz with checkboxes. The procedure described in the video includes the following steps: Go to the quiz link where each question has checkboxes given against the possible answers. Click each combination of checkboxes, all checkboxes or each pair of checkboxes or a single checkbox until the answer is correct. Repeat the previous step for each question. The video then goes on to describe how to automate this test case using Selenium WebDriver with Python. It includes details on how to find checkbox elements, check them, and use a user-defined function to determine if the answer is correct. The reasoning behind automating the test case for a quiz with checkboxes using Selenium WebDriver with Python is to efficiently and accurately determine the correct answers to the quiz questions by trying different combinations of checkboxes. The video describes how to use Selenium WebDriver with Python to find checkbox elements, check them, and use a user-defined function to determine if the answer is correct. This automation allows for a more efficient and accurate way of finding the correct answers to the quiz questions. 6. What procedures were demonstrated in the video lecture? The procedures demonstrated in the video are handling Selenium Python frames and Selenium Python alert handling. The video explains how to switch to a frame and find an element within it, and how to handle an alert message box that pops up on the web page using Selenium web driver. It also provides a Python script example that shows how to find and switch to a frame, find and click a button within the frame, and handle the alert that appears after clicking the button. 10. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to take screenshots. The procedure described in the video includes the following steps: 1. Write a function to take screenshots automatically using the `save_screenshot` method of WebDriver. 2. Use the Python Imaging Library (PIL) to modify a screenshot by resizing it, rotating it, or saving it in another format. 3. Use PIL to take an element screenshot by cropping that screenshot. 4. Call the screenshot function within a test script to take screenshots automatically. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the PIL library. 12. What procedures were demonstrated in the video lecture? 1. Install OpenPy Excel package using the pip command: `PIP Install OpenPy Excel`. 2. In PyCharm project, click `File` > `Settings` > `project interpreter`, then type `OpenPy Excel` in available packages and click on the `install package` button. 3. Create a new Python file `Excel read.py` in PyCharm ID. 4. Import OpenPy Excel and give the alias as `O`. 5. Specify the Excel file and the worksheet within the Excel file. 6. Define a variable for the workbook: `WBE = OpenPy Excel.load_workbook(name of the Excel file along with the full file path)`. 7. Define a variable for the worksheet: `WS = workbook[Data1]`. 8. Get the maximum number of rows and maximum number of columns. 9. Start reading data from the second row. 10. Access individual cells of the worksheet using `.cell(row number, column number).value`. 13. What procedures were demonstrated in the video lecture? The video is a tutorial on using Selenium WebDriver with Python to implement the Page Object Model (POM) design pattern. The procedure described in the video includes the following steps: 1. Create separate files for the test logic and for the web page-specific information, such as locators and operations. 2. Implement POM in a new or existing Python project by creating separate directories or folders for web pages and test cases. 3. Create a separate Python file for each web page and write code to define page-specific information such as title, locators, and operations. 4. Write code in the test case Python file to contain only the test logic, meaning only test steps and expected results validations. The video then goes on to provide an example script that demonstrates how to implement this procedure using Selenium WebDriver with Python and the POM design pattern. .... get score 28.493025383032244
總得分：28
--------- end of 8 --------------------
